head(dat$count)
head(dat)
sum(dat[which(dat$species=="psd"),"seeds"])
View(dat)
length(dat[which(dat$species=="psd")])
nrow(dat[which(dat$species=="psd"),])
p+geom_bar(color=NA,fill='blue',width=0.5)
ggplot(data=dat,mapping=aes(x=species,fill=dist))+geom_bar()
ggplot(data=dat,mapping=aes(x=species,fill=dist))+geom_bar(position='dodge')
q <- p+geom_bar(color=NA,fill='blue',width=0.5)
print(q)
?geom_bar
## ------------------------------------------------------------------------
subset(dat,station==17 & dist==10) -> x
pl <- ggplot(data=x,mapping=aes(x=date,y=seeds))+geom_point()
print(pl)
pl+geom_line()
## ------------------------------------------------------------------------
pl <- pl+geom_step()
print(pl)
subset(dat,station==17) -> x
pl <- ggplot(data=x,mapping=aes(x=date,y=seeds))+geom_step()+geom_point()
pl
?geom_step
## ------------------------------------------------------------------------
pl <- ggplot(data=x,mapping=aes(x=date,y=seeds,group=dist,color=dist))+
geom_step()+geom_point()
pl
pl <- ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=dist,
group=interaction(station,dist)))+
geom_step()
pl
pl <- pl+facet_wrap(~station)
pl
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist))+
geom_step()+
facet_wrap(~station)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist))+
geom_step()+
facet_wrap(~species)
la = subset(dat,station %in% 1:10)
View(la)
unique(la[which(la$species=="psd"),]$station)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(species, station),color=species,linetype=dist))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(species, dist),color=species,linetype=dist))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=station,color=species,linetype=dist))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(station, dist),color=species,linetype=dist))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(station, dist),color=species,linetype=dist))+
geom_step()+
facet_wrap(~species*dist)
?facet_wrap
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(station, dist),color=species,linetype=dist))+
geom_step()+
facet_wrap(~species + dist, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(station, dist),color=species,linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=station,color=species,linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=as.factor(station),color=species,linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=factor(station),color=species,linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=factor(station),linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=factor(station),color=species,linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=factor(station)))+
geom_step()+
facet_grid(dist~species)
?facet_grid
?facet_wrap
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=factor(station),color=factor(station),linetype=dist))+
geom_step()+
facet_wrap(dist~species, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=factor(station),color=factor(station),linetype=dist))+
geom_step()+
facet_wrap(~species + dist, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=factor(species),color=factor(station),linetype=dist))+
geom_step()+
facet_wrap(~species + dist, nrow=2 )
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist,
group=interaction(station,dist)))+
geom_step()+
facet_wrap(~species)
lynx <- read.csv(paste0(course.url,"/data/lynx_pelts.csv"),comment.char="#")
pl <- ggplot(data=lynx,mapping=aes(y=pelts,x=year))+geom_line()+
facet_wrap(~district)
pl
mapping=aes(x=species,fill=dist,y=seeds))+
geom_violin()
ggplot(data=subset(dat,date %in% as.Date(c("1999-05-09","1999-05-10"))),
mapping=aes(x=species,fill=dist,y=seeds))+
geom_violin()
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist,
group=interaction(station,dist)))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist,
group=interaction(station,dist)))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(station,dist),color=factor(station)))+
geom_step()+
facet_grid(dist~species)
## ------------------------------------------------------------------------
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,group=interaction(station,dist)))+
geom_step()+
facet_grid(dist~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist,
group=interaction(station,dist)))+
geom_step()+
facet_wrap(~species)
ggplot(data=subset(dat,station %in% 1:10),
mapping=aes(x=date,y=seeds,color=species,linetype=dist,
group=interaction(station,dist)))+
geom_step()+
facet_wrap(~species+dist)
library(reshape2)
x <- data.frame(a=letters[1:10],b=1:10,
c=sample(LETTERS[1:3],10,replace=TRUE),d=sample(1:10,10,replace=T))
x
melt(x,id.vars=c("a","b"))
melt(x,measure.vars=c("c","d")) -> y; y
?melt
dcast(y,a+b~variable) -> d1; d1
class(d1)
acast(y,b~variable) -> a1; a1
class(a1); dim(a1)
acast(y,a~b~variable) -> a2; a2
class(a2); dim(a2)
library(reshape2)
x <- data.frame(a=letters[1:10],b=1:10,
c=sample(LETTERS[1:3],10,replace=TRUE),d=sample(1:10,10,replace=T))
x
melt(x,id.vars=c("a","b"))
melt(x,measure.vars=c("c","d")) -> y; y
dcast(y,a+b~variable) -> d1; d1
class(d1)
dcast(y,a+b~variable) -> d1; d1
class(d1)
acast(y,b~variable) -> a1; a1
class(a1); dim(a1)
acast(y,a~b~variable) -> a2; a2
class(a2); dim(a2)
install.packages("plyr")
install.packages("plyr")
library(plyr)
library(plyr)
x <- data.frame(a=letters[1:10],b=runif(10),c=sample(LETTERS[1:3],10,replace=TRUE))
arrange(x,a,b,c)
arrange(x,b,c,a)
arrange(x,c,b,a)
course.url <- "http://kinglab.eeb.lsa.umich.edu/480"
read.csv(file.path(course.url,"data/energy_production.csv"),comment="#") -> energy
arrange(energy,region,source,year)
arrange(energy,-TJ,year)
head(arrange(energy,region,source,year))
head(arrange(energy,-TJ,year))
head(energy)
x
arrange(x,b,c,a)
?arrange
x <- expand.grid(a=1:3,b=1:5)
y <- expand.grid(a=1:2,b=1:5,c=factor(c("F","G")))
m1 <- merge(x,y); m1
m2 <- merge(x,y,by='a'); m2
m3 <- merge(x,y,all=TRUE); m3
m4 <- merge(x,y,by='a',all=TRUE); m4
x
y
m1
join(x,y,by=c('a','b'),type='left')
join(x,y,by=c('a','b'),type='right')
View(x)
View(y)
View(x)
join(x,y,by=c('a','b'),type='inner')
x <- expand.grid(a=1:3,b=1:5,d=7:9)
y <- expand.grid(a=1:2,b=1:5,c=factor(c("F","G")))
join(x,y,by=c('a','b'),type='right')
join(x,y,by=c('a','b'),type='full')
### Here, we only need ggplot2 to make figures and tidyr and dplyr to reorganize the data into the desired form
library(ggplot2)
library(tidyr)
library(dplyr)
### load the data
data(iris)
### resape the data
iris.new = iris %>%
gather(key = flower_att, value = measurement, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)
iris.SW.setosa = iris.new %>% filter(flower_att=="Sepal.Width" & Species=="setosa")
ggplot(df, aes(x=x)) +
geom_histogram(aes(y = ..density..), binwidth=density(df$x)$bw) +
geom_density(fill="red", alpha = 0.2) +
theme_bw() +
xlab('') +
ylab('')
ggplot(df, aes(x=x)) +
geom_histogram(aes(y = ..density..), binwidth=density(df$x)$bw) +
theme_bw() +
xlab('') +
ylab('')
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
bins=10)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
bandwidth=density(measurement)$bw)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
bandwidth=density(iris.SW.setosa$measurement)$bw)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
binwidth=density(iris.SW.setosa$measurement)$bw)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
bins=10)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
bins=10)+geom_density(fill="red", alpha = 0.2)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
binwidth=density(iris.SW.setosa$measurement)$bw)+geom_density(fill="red", alpha = 0.2)
density(iris.SW.setosa$measurement)
density(iris.SW.setosa$measurement)$bw
?density
require(graphics)
plot(density(c(-20, rep(0,98), 20)), xlim = c(-4, 4))
density(c(-20, rep(0,98), 20))$bw
density(c(-20, rep(0,98), 20))
c(-20, rep(0,98), 20)
p.SW.setosa = ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
binwidth = density(density(iris.SW.setosa$measurement)$bw))
print(p.SW.setosa)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
binwidth = density(iris.SW.setosa$measurement)$bw)
ggplot(data=iris.SW.setosa,
mapping=aes(x=measurement))+
geom_histogram(aes(y=..density..),
binwidth = density(iris.SW.setosa$measurement)$bw)+
geom_density(col="red")
ggplot(data=iris.new,
mapping = aes(measurement, col=Species, fill=Species),
group = interaction(Species, flower_att))+
geom_histogram(aes(y=..density..),
bins = 100)+
geom_density(col="black")+
facet_grid(Species~flower_att)
ggplot(data=iris.new,
mapping = aes(measurement, col=Species, fill=Species),
group = interaction(Species, flower_att))+
geom_histogram(aes(y=..density..),
bins = 1000)+
geom_density(col="black")+
facet_grid(Species~flower_att)
ggplot(data=iris.new,
mapping = aes(measurement, col=Species, fill=Species),
group = interaction(Species, flower_att))+
geom_histogram(aes(y=..density..),
bins = 100)+
geom_density(col="black")+
facet_grid(Species~flower_att)
p.all = ggplot(data=iris.new,
mapping = aes(measurement, col=Species, fill=Species),
group = interaction(Species, flower_att))+
geom_histogram(aes(y=..density..),
binwidth=0.02)+
geom_density(col="black")+
facet_grid(Species~flower_att)
print(p.all)
p.all = ggplot(data=iris.new,
mapping = aes(measurement, col=Species, fill=Species),
group = interaction(Species, flower_att))+
geom_histogram(aes(y=..density..),
binwidth=0.05)+
geom_density(col="black")+
facet_grid(Species~flower_att)
print(p.all)
p.all = ggplot(data=iris.new,
mapping = aes(measurement, col=Species, fill=Species),
group = interaction(Species, flower_att))+
geom_histogram(aes(y=..density..),
binwidth=0.08)+
geom_density(col="black")+
facet_grid(Species~flower_att)
print(p.all)
View(iris.new)
p.aov = ggplot(data = iris, mapping = aes(x=Species, y=Sepal.Width))+
geom_boxplot()+
geom_jitter()
print(p.aov)
### try another dataset and different
data(mtcars)
data(mpg)
head(mpg)
head(mtcars)
View(mpg)
mpg$manufacturer
class(mpg)
str(mpg)
iris.PW.seto = iris.new %>% filter(flower_att=="Petal.Width" & Species=="setosa")
p.PW.seto = ggplot(data=iris.PW.seto,
mapping=aes(measurement, ..count..))+
geom_histogram(aes(y=..count..),
bins=10)
print(p.PW.seto)
shapiro.test(iris.PW.seto$measurement)
shapiro.test(log(iris.PW.seto$measurement))
qqnorm(iris.PW.seto$measurement); qqline(iris.PW.seto$measurement, col = 2)
qqnorm(log(iris.PW.seto$measurement)); qqline(log(iris.PW.seto$measurement), col = 2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plyr)
library(reshape2)
setwd("D:/Courses/UM/2016_WN/EEB480_modelinfer/20160926/Assignment 5 Exercise in Data Visualization")
AL_SP = read.csv(file="MLB_AL_SP_1986_2016.csv", header = TRUE, sep=",", fill=TRUE)
str(AL_SP)
head(AL_SP)
AL_SP = AL_SP %>% arrange(Season, Team, Name)
head(AL_SP)
ALSP.all = AL_SP %>%
filter(IP>1 & GS>1)
ALSP.all2 = AL_SP %>%
subset(IP>1 & GS>1)
allSP = length(unique(ALSP.all$Name))
allSP
ALSP.all.long = ALSP.all %>%
gather(key=stats, value=val, W, L, G, GS, IP, K9, BB9, HR9, BABIP, LOB, HRFB, FIP, WAR, WHIP, ERA, Age)
ALSP.all.long2 = ALSP.all %>%
melt(id.vars=colnames(ALSP.all)[1:3], variable.name="stats", value.name="val")
# melt seems to be more convenient as it can take the output from "colnames" directly
ALSP.all.long2$stats=as.character(ALSP.all.long2$stats)
# Beacuse melt function makes the variables (names as stats here) into factor, so I'll have to transform it
# into character for comparing the two dataframe.
all_equal(target=ALSP.all.long, current=ALSP.all.long2)
small50IP = AL_SP %>%
filter(IP<50) %>%
mutate(WL = W/L, IP.id="<50 IP")
large50IP = AL_SP %>%
filter(IP>50 & IP<100) %>%
mutate(WL = W/L, IP.id="50-100 IP")
large100IP = AL_SP %>%
filter(IP>100) %>%
mutate(WL = W/L, IP.id=">100IP")
ALSP.WL = rbind(small50IP, large50IP, large100IP) %>%
filter(WL>=0)%>%
select(Season, Name, IP, IP.id, WL)
ggplot(data=ALSP.WL,
aes(x=IP, y=WL, color=IP.id),
group=IP.id)+
geom_point()+
xlab("Inning Pitched (IP)")+
ylab("Win-Loss ratio")+
guides(guide_legend(titel="IP group"))
ALSP. = rbind(small50IP, large50IP, large100IP) %>%
filter(WL>=0)%>%
select(Season, Name, IP, IP.id, WL, ERA, FIP)
View(ALSP.)
View(ALSP.all)
ALSP.IPeffects = rbind(small50IP, large50IP, large100IP) %>%
filter(WL>=0)%>%
select(Season, Name, IP, IP.id, WL, ERA, FIP, WHIP, WAR)
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=ERA, color=IP.id),
group=IP.id)+
geom_point()+
xlab("Inning Pitched (IP)")+
ylab("ERA")+
guides(guide_legend(titel="IP group"))
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=ERA, color=IP.id),
group=IP.id)+
geom_point()+
scale_y_continuous(limits = c(0, 10))+
xlab("Inning Pitched (IP)")+
ylab("ERA")+
guides(guide_legend(titel="IP group"))
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=FIP, color=IP.id),
group=IP.id)+
geom_point()
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=FIP, color=IP.id),
group=IP.id)+
geom_point()+
scale_y_continuous(limits = c(0, 10))+
xlab("Inning Pitched (IP)")+
ylab("ERA")+
guides(guide_legend(titel="IP group"))
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=WHIP, color=IP.id),
group=IP.id)+
geom_point()+
scale_y_continuous(limits = c(0, 10))+
xlab("Inning Pitched (IP)")+
ylab("WHIP")+
guides(guide_legend(titel="IP group"))
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=WAR, color=IP.id),
group=IP.id)+
geom_point()
options(stringsAsFactors=FALSE)
course.url <- "http://kinglab.eeb.lsa.umich.edu/480"
dat <- read.csv(paste0(course.url,"/data/galapagos.csv"),comment='#')
head(dat)
?paste0
paste0(1:12, c("st", "nd", "rd", rep("th", 9)))
paste(1:12, c("st", "nd", "rd", rep("th", 9)))
pairs(~species+endemics+area+elevation+nearest+scruz+adjacent,data=dat)
## ------------------------------------------------------------------------
plot(species~endemics,data=dat)
abline(a=0,b=1)
#'
#' Note that a pairs-plot is the default plot method for a data frame.
#' Thus, we could have produced the above by `plot(dat)`.
#'
## ------------------------------------------------------------------------
lm1 <- lm(species~area+elevation+nearest,data=dat)
summary(lm1)
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=WHIP, color=IP.id),
group=IP.id)+
geom_point()+
scale_y_continuous(limits = c(0, 10))+
xlab("Inning Pitched (IP)")+
ylab("WHIP")+
guides(guide_legend(titel="IP group"))
ggplot(data=ALSP.IPeffects,
aes(x=IP, y=WHIP, fill=IP.id),
group=IP.id)+
geom_point()+
scale_y_continuous(limits = c(0, 10))+
xlab("Inning Pitched (IP)")+
ylab("WHIP")+
guides(guide_legend(titel="IP group"))
X <- model.matrix(lm1); X
head(dat)
library(magrittr)
library(plyr)
dat %<>% mutate(prox=factor(mapvalues(nearest<5,from=c(TRUE,FALSE),to=c("near","far"))),
height=cut(elevation,breaks=c(0,500,1000,Inf),ordered=TRUE,right=FALSE))
head(dat)
str(dat)
model.matrix(species~area,data=dat)
model.matrix(species~area-1,data=dat)
model.matrix(species~prox,data=dat)
model.matrix(species~area^2,data=dat)
model.matrix(species~area,data=dat)
model.matrix(species~prox:area,data=dat)
model.matrix(species~prox+area+prox:area,data=dat)
View(dat)
lm2 <- lm(species~area+elevation+adjacent,data=dat)
summary(lm2)
dat %<>% mutate(dat,diff=area-adjacent)
lm3 <- lm(species~area+elevation+adjacent+diff,data=dat)
summary(lm3)
print(try(solve(crossprod(X))))
eigen(crossprod(X))$values
dat %<>% mutate(diff=diff+rnorm(30,sd=0.001))
lm4 <- lm(species~area+elevation+adjacent+diff,data=dat)
summary(lm4)
